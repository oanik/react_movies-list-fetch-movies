{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/request.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","query","url","fetch","then","response","ok","status","statusText","json","Response","Error","FindMovie","addMovie","useState","input","setInput","preview","setPreview","error","setError","disabled","setDisabled","loadData","a","newMovie","film","Plot","Poster","imdbID","Title","htmlFor","type","id","value","onChange","event","target","placeholder","onClick","App","state","data","setState","some","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.637f5b72.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","/* eslint-disable no-throw-literal */\nconst baseURL = 'http://www.omdbapi.com/?i=tt3896198&apikey=f7a5fcde';\n\nconst request = url => fetch(`${baseURL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw `${response.status} - ${response.statusText}`;\n    }\n\n    return response.json();\n  })\n  .then((response) => {\n    if (response.Response === 'False') {\n      throw new Error('Error');\n    }\n\n    return response;\n  });\n\nexport const getMovie = query => request(`&t=${query}`);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/request';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [input, setInput] = useState('');\n  const [preview, setPreview] = useState('');\n  const [error, setError] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n\n  const loadData = async(query) => {\n    if (query === '') {\n      setError(true);\n      setPreview('');\n      setDisabled(true);\n\n      return;\n    }\n\n    try {\n      const newMovie = await getMovie(query);\n      const film = {\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        title: newMovie.Title,\n        imdbId: newMovie.imdbID,\n      };\n\n      setPreview(film);\n      setDisabled(false);\n    } catch (err) {\n      setError(true);\n      setDisabled(true);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={input}\n              onChange={(event) => {\n                setInput(event.target.value);\n                setPreview('');\n                setError(false);\n              }}\n              placeholder=\"Enter a title to search\"\n              className={className('input', { 'is-danger': error })}\n            />\n          </div>\n          {error && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                loadData(input);\n              }}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={disabled}\n              onClick={() => {\n                if (error) {\n                  return;\n                }\n\n                addMovie(preview);\n                setInput('');\n                setPreview('');\n                setDisabled(true);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!error && (\n          preview !== ''\n            ? <MovieCard {...preview} />\n            : 'Search Movies')}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      const newMovie = state.movies.some(film => film.imdbId === movie.imdbId);\n\n      return (newMovie) ? { movies: state.movies } : {\n        movies: [...state.movies, movie,\n        ],\n      };\n    });\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}